{"version":3,"sources":["components/Navbar.jsx","components/MyMenu.jsx","components/Task.jsx","components/Tasks.jsx","components/Job.jsx","components/Jobs.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavItem","props","className","children","Navbar","CheckBox","Home","Person","MyMenu","TaskTitle","title","done","id","jobId","setTaskProp","useContext","JobsContext","useState","isEditing","setIsEditing","tempTitle","setTempTitle","isHovered","setIsHovered","onMouseEnter","onMouseLeave","onDoubleClick","console","log","action","onSubmit","e","preventDefault","type","name","placeholder","onChange","target","value","onClick","CheckBoxOutlineBlank","Cancel","Edit","Close","Task","task","Tasks","tasks","map","JobTitle","setJobProp","ArrowDropDown","Job","job","isOpen","setIsOpen","Jobs","jobs","createContext","App","jobsList","setJobsList","Provider","taskId","prop","temp","localStorage","setItem","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf86a28.chunk.js","sourcesContent":["import React from \"react\";\nimport { Person, Home, CheckBox } from \"@material-ui/icons\";\n\nconst NavItem = (props) => {\n  return (\n    <div className=\"bg-white hover:bg-gray-50 shadow-md cursor-pointer p-3 rounded text-purple-500 flex items-center gap-2\">\n      {props.children}\n    </div>\n  );\n};\n\nconst Navbar = () => {\n  return (\n    <nav className=\"w-full px-20 py-3 flex justify-center gap-2 items-center text-black\">\n      <NavItem>\n        <CheckBox />\n        <span className=\"font-bold text-3xl text-purple-500\">Utter</span>\n      </NavItem>\n      <div className=\"flex gap-2\">\n        <NavItem>\n          <Home />\n        </NavItem>\n        <NavItem>\n          <Person />\n        </NavItem>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","// import React, { useState } from \"react\";\n\nconst MyMenu = () => {\n  return <div></div>;\n};\n\nexport default MyMenu;\n","import { Cancel, CheckBox, CheckBoxOutlineBlank, Close, Edit } from '@material-ui/icons';\nimport React, { useContext, useState } from 'react';\nimport {JobsContext} from '../App';\n\nconst TaskTitle = ({title, done, id, jobId}) => {\n    const setTaskProp = useContext(JobsContext)[0];\n    const [isEditing, setIsEditing] = useState(false);\n    const [tempTitle, setTempTitle] = useState(\"\");\n    const [isHovered, setIsHovered] = useState(false);\n\n    return (\n        <div \n            className=\"relative flex gap-3 p-2 mx-auto w-3/5 sm:w-2/5 md:w-1/5 lg:w-1/5 bg-purple-400 hover:bg-purple-600 text-white shadow-md rounded\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n            onDoubleClick={() => {\n                console.log(\"editnig\");\n                \n            }}>\n            \n            {\n                isEditing\n                ? <form action=\"\" onSubmit={(e) => {\n                    setIsEditing(false);\n                    setTaskProp(jobId, id, \"title\", tempTitle);\n                    e.preventDefault();\n                }}>\n                        <input \n                        className=\"bg-purple-300 appearance-none border-none rounded w-full px-3 text-gray-700 focus:outline-none focus:shadow-outline\" \n                        type=\"text\" \n                        name=\"title\" \n                        id=\"title\" \n                        placeholder={title} \n                        onChange={e => setTempTitle(e.target.value)}/> \n                    </form>\n                    : <span className={`${done ? \"line-through\" : \"\"} w-full`}>{title}</span> \n            }\n            \n            {\n                isHovered\n                    ? <div className=\"flex gap-2 h-full\">\n                        <span className=\"cursor-pointer hover:text-gray-200\" onClick={() => {setTaskProp(jobId, id, \"done\", !done);}}>\n                          {done ? <CheckBox /> : <CheckBoxOutlineBlank />}\n                        </span>\n                        {\n                            isEditing\n                                ? <span className=\"cursor-pointer\" onClick={() => setIsEditing(false)}><Cancel/></span>\n                                : <span className=\"cursor-pointer\" onClick={() => setIsEditing(true)}><Edit/></span>\n                        }\n                        <span className=\"absolute right-0 top-0 transform translate-x-1/2 -translate-y-1/2 scale-75 bg-red-500 rounded\">\n                            <Close />\n                        </span>\n                    </div>\n                    : \"\"\n            }\n        </div>\n    );\n}\n\nconst Task = ({task, jobId}) => {\n    return (\n        <TaskTitle title={task.title} done={task.done} id={task.id} jobId={jobId} />\n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\n\nconst Tasks = ({ tasks, jobId }) => {\n    return (\n        <div>\n            {tasks.map((task) => {\n                return <Task task={task} key={task.id} jobId={jobId} />\n            })}\n        </div>\n    )\n}\n\nexport default Tasks\n","import React, { useState, useContext } from 'react'\nimport { ArrowDropDown, Cancel, CheckBox, CheckBoxOutlineBlank, Edit } from \"@material-ui/icons\";\nimport Tasks from './Tasks';\nimport {JobsContext} from '../App';\n\nconst JobTitle = ({title, done, id, onClick}) => {\n    const setJobProp = useContext(JobsContext)[1];\n    const [isEditing, setIsEditing] = useState(false);\n    const [tempTitle, setTempTitle] = useState(\"\");\n    const [isHovered, setIsHovered] = useState(false);\n\n    return (\n        <div className=\"flex gap-3 p-5 mx-auto mt-5 w-4/6 sm:w-3/6 md:w-2/6 lg:w-1/4 bg-purple-500 hover:bg-purple-800 text-white rounded shadow\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n            onDoubleClick={() => setIsEditing(true)}>\n            <ArrowDropDown onClick={onClick} className=\"cursor-pointer bg-white hover:bg-gray-100 rounded text-purple-500\" /> \n            {\n                isEditing\n                    ? <form action=\"\" onSubmit={(e) => {\n                        setIsEditing(false);\n                        console.log(tempTitle);\n                        setJobProp(id, \"title\", tempTitle);\n                        e.preventDefault();\n                    }}>\n                        <input \n                        className=\"bg-purple-300 appearance-none border-none rounded w-full px-3 text-gray-700 focus:outline-none focus:shadow-outline\" \n                        type=\"text\" \n                        name=\"title\" \n                        id=\"title\" \n                        placeholder={title} \n                        onChange={e => setTempTitle(e.target.value)}/> \n                    </form>\n                    : <span className={`${done ? \"line-through\" : \"\"} w-full`}>{title}</span> \n            }\n\n            {\n                isHovered\n                    ? <div className=\"flex gap-2 h-full\">\n                        <span className=\"cursor-pointer hover:text-gray-200\" onClick={() => {setJobProp(id, \"done\", !done);}}>\n                          {done ? <CheckBox /> : <CheckBoxOutlineBlank />}\n                        </span>\n                        {\n                            isEditing\n                                ? <span className=\"cursor-pointer\" onClick={() => setIsEditing(false)}><Cancel/></span>\n                                : <span className=\"cursor-pointer\" onClick={() => setIsEditing(true)}><Edit/></span>\n                        }\n                    </div>\n                    : \"\"\n            }\n\n        </div>\n    );\n}\n\nconst Job = ({job, jobId}) => {\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <div>\n            <JobTitle title={job.title} done={job.done} id={jobId} onClick={() => setIsOpen(!isOpen)} />\n\n            {\n                isOpen\n                    ? <Tasks tasks={job.tasks} jobId={jobId} />\n                    : \"\"\n            }\n\n        </div>\n    )\n}\n\nexport default Job\n","import React from \"react\";\nimport Job from \"./Job\";\n\nconst Jobs = ({jobs}) => {\n  return <div>\n    {jobs.map((job) => {\n      return <Job job={job} key={job.id} jobId={job.id} />\n    })}\n  </div>;\n};\n\nexport default Jobs;\n","import Navbar from \"./components/Navbar\";\nimport MyMenu from \"./components/MyMenu\";\nimport Jobs from \"./components/Jobs\";\nimport { createContext, useState } from \"react\";\n\nexport let JobsContext = createContext(null);\n\nfunction App() {\n  let [jobsList, setJobsList] = useState([\n    {\n      id: 0,\n      title: \"Test Job 1\",\n      done: false,\n      tasks: [\n        {\n          id: 0,\n          title: \"Bread\",\n          done: true,\n        }, \n        {\n          id: 1,\n          title: \"Potato Chip\",\n          done: false,\n        }, \n      ]\n    },\n    {\n      id: 1,\n      title: \"Test Job 2\",\n      done: false,\n      tasks: [\n        {\n          id: 0,\n          title: \"Carrot\",\n          done: false,\n        }, \n        {\n          id: 1,\n          title: \"Tomato\",\n          done: false,\n        }, \n      ]\n    },\n    {\n      id: 2,\n      title: \"Test Job 3\",\n      done: false,\n      tasks: [\n        {\n          id: 0,\n          title: \"Apple\",\n          done: false,\n        }, \n        {\n          id: 1,\n          title: \"Mango\",\n          done: false,\n        }, \n      ]\n    },\n  ]);\n\n  const setTaskProp = (jobId, taskId, prop, value) => {\n    let temp = [...jobsList];\n    temp[jobId].tasks[taskId][prop] = value;\n    setJobsList(temp);\n    localStorage.setItem(\"jobs\", temp.toString());\n    return temp;\n  }\n  const setJobProp = (jobId, prop, value) => {\n    let temp = [...jobsList];\n    temp[jobId][prop] = value;\n    setJobsList(temp);\n    return temp;\n  }\n\n  // const setTaskTitle = (jobId, taskId, newTitle) => {\n  //   let temp = [...jobsList];\n  //   temp[jobId].tasks[taskId].title = newTitle;\n  //   setJobsList(temp);\n  // }\n\n  return (\n    <main className=\"w-full h-full bg-gray-200 pt-20 flex flex-col\">\n      <JobsContext.Provider value={[setTaskProp, setJobProp]}>\n        <MyMenu />\n        <Navbar />\n        <Jobs jobs={jobsList} />\n      </JobsContext.Provider>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/App.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}